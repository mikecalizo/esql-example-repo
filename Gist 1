Use-case:

the firewalls do classify some domains as cryptomining that a user may just stumble across. We use ES|QL to keep an eye on the devices that are consistently accessing cyrptomining domains and therefore 
may have cyrptomining software or malware installed.

POST /_bulk
{ "index": { "_index": "firewall-logs" } }
{ "device_id": "dev-001", "timestamp": "2025-06-08T09:00:00Z", "domain": "crypto-evil.com", "category": "cryptomining" }
{ "index": { "_index": "firewall-logs" } }
{ "device_id": "dev-002", "timestamp": "2025-06-08T09:05:00Z", "domain": "news-site.com", "category": "news" }
{ "index": { "_index": "firewall-logs" } }
{ "device_id": "dev-001", "timestamp": "2025-06-08T09:10:00Z", "domain": "another-crypto.com", "category": "cryptomining" }
{ "index": { "_index": "firewall-logs" } }
{ "device_id": "dev-003", "timestamp": "2025-06-08T09:20:00Z", "domain": "crypto-evil.com", "category": "cryptomining" }
{ "index": { "_index": "firewall-logs" } }
{ "device_id": "dev-004", "timestamp": "2025-06-08T09:30:00Z", "domain": "sports-site.com", "category": "sports" }

POST /_bulk
{ "index": { "_index": "device-inventory" } }
{ "device_id": "dev-001", "user": "Alice", "department": "Finance" }
{ "index": { "_index": "device-inventory" } }
{ "device_id": "dev-002", "user": "Bob", "department": "Engineering" }
{ "index": { "_index": "device-inventory" } }
{ "device_id": "dev-003", "user": "Carol", "department": "IT" }
{ "index": { "_index": "device-inventory" } }
{ "device_id": "dev-004", "user": "Dave", "department": "HR" }


POST /_query
{
  "query": """
    FROM firewall-logs
| WHERE category == "cryptomining"
| LOOKUP JOIN device-inventory ON device_id
| KEEP device_id, domain, user, department
| SORT device_id ASC
  """
}

GET /firewall-logs
GET /device-inventory
GET _cat/indices/firewall-logs
GET _cat/indices/device-inventory


GET device-inventory/_settings


DELETE device-inventory

PUT device-inventory
{
  "settings": {
    "index.mode": "lookup"
  },
  "mappings": {
    "properties": {
      "device_id": { "type": "keyword" },
      "user": { "type": "keyword" },
      "department": { "type": "keyword" }
    }
  }
}

Threat Hunting: 
Imagine you’re a school IT administrator monitoring student devices.
A student’s laptop is showing up on both lan.1 (student VLAN) and lan.5 (admin VLAN).
That’s suspicious — so this ES|QL query quickly surfaces such devices for investigation

PUT _data_stream/logs-fortinet.traffic-demo

POST /_bulk
{ "create": { "_index": "logs-fortinet.traffic-demo" } }
{ "source": { "mac": "00:11:22:33:44:55", "address": "HOST1", "user": { "name": "alice" } }, "observer": { "ingress": { "interface": { "name": ["lan.1", "lan.2"] } } }, "fortinet": { "firewall": { "srchwvendor": "HP", "osname": "FortiOS 7.2" } }, "school": { "name": "Greenfield" }, "@timestamp": "2025-06-08T09:00:00Z" }
{ "create": { "_index": "logs-fortinet.traffic-demo" } }
{ "source": { "mac": "66:77:88:99:AA:BB", "address": "HOST2", "user": { "name": "bob" } }, "observer": { "ingress": { "interface": { "name": "lan.3" } } }, "fortinet": { "firewall": { "srchwvendor": "Dell", "osname": "FortiOS 7.0" } }, "school": { "name": "Sunnydale" }, "@timestamp": "2025-06-08T09:05:00Z" }
{ "create": { "_index": "logs-fortinet.traffic-demo" } }
{ "source": { "mac": "CC:DD:EE:FF:00:11", "address": "HOST3", "user": { "name": "charlie" } }, "observer": { "ingress": { "interface": { "name": ["lan.1", "lan.2"] } } }, "fortinet": { "firewall": { "srchwvendor": "Cisco", "osname": "FortiOS 7.2" } }, "school": { "name": "Lakeside" }, "@timestamp": "2025-06-08T09:10:00Z" }
{ "create": { "_index": "logs-fortinet.traffic-demo" } }
{ "source": { "mac": "AA:BB:CC:DD:EE:FF", "address": "HOST4", "user": { "name": "dave" } }, "observer": { "ingress": { "interface": { "name": ["lan.1", "lan.5"] } } }, "fortinet": { "firewall": { "srchwvendor": "Aruba", "osname": "FortiOS 7.1" } }, "school": { "name": "Hillside" }, "@timestamp": "2025-06-08T09:20:00Z" }
{ "create": { "_index": "logs-fortinet.traffic-demo" } }
{ "source": { "mac": "11:22:33:44:55:66", "address": "HOST5", "user": { "name": "eve" } }, "observer": { "ingress": { "interface": { "name": "lan.3" } } }, "fortinet": { "firewall": { "srchwvendor": "Juniper", "osname": "FortiOS 7.0" } }, "school": { "name": "Riverdale" }, "@timestamp": "2025-06-08T09:25:00Z" }
{ "create": { "_index": "logs-fortinet.traffic-demo" } }
{ "source": { "mac": "77:88:99:AA:BB:CC", "address": "HOST6", "user": { "name": "frank" } }, "observer": { "ingress": { "interface": { "name": "lan.4" } } }, "fortinet": { "firewall": { "srchwvendor": "Huawei", "osname": "FortiOS 7.2" } }, "school": { "name": "Hilltop" }, "@timestamp": "2025-06-08T09:30:00Z" }
{ "create": { "_index": "logs-fortinet.traffic-demo" } }
{ "source": { "mac": "88:99:AA:BB:CC:DD", "address": "HOST7", "user": { "name": "grace" } }, "observer": { "ingress": { "interface": { "name": "lan.2" } } }, "fortinet": { "firewall": { "srchwvendor": "PaloAlto", "osname": "FortiOS 7.3" } }, "school": { "name": "Valley" }, "@timestamp": "2025-06-08T09:35:00Z" }
{ "create": { "_index": "logs-fortinet.traffic-demo" } }
{ "source": { "mac": "99:AA:BB:CC:DD:EE", "address": "HOST8", "user": { "name": "heidi" } }, "observer": { "ingress": { "interface": { "name": "lan.5" } } }, "fortinet": { "firewall": { "srchwvendor": "CheckPoint", "osname": "FortiOS 7.1" } }, "school": { "name": "Highland" }, "@timestamp": "2025-06-08T09:40:00Z" }

FROM logs-fortinet.traffic-demo
| WHERE 
    source.mac IS NOT NULL
| MV_EXPAND observer.ingress.interface.name
| WHERE 
    observer.ingress.interface.name IN ("lan.1", "lan.5")
| STATS 
    COUNT()
  BY 
    source.mac, 
    observer.ingress.interface.name, 
    source.user.name,
    hostname = TO_LOWER(source.address), 
    fortinet.firewall.srchwvendor, 
    fortinet.firewall.osname, 
    school.name
| STATS 
    int_list = VALUES(observer.ingress.interface.name),
    int_count = COUNT_DISTINCT(observer.ingress.interface.name),
    users = VALUES(source.user.name), 
    hostnames = VALUES(hostname), 
    hwvendor = VALUES(fortinet.firewall.srchwvendor), 
    OS = VALUES(fortinet.firewall.osname)
  BY 
    school.name, 
    source.mac
| WHERE 
    int_count >= 2


Use-case: At risk users. We've calculated a logarithmically weighted metric that reflects the number of "newly observed" domains a user accesses vs the amount of unique hours they access them across. This used to be a dashboard we checked daily, but now we can do this with an alerting rule as ES|QL 
allows us to set much more complex thresholds rather than just document count > X.


POST _bulk
{ "index": { "_index": "user-activity-demo" } }
{ "user.name": "alice", "@timestamp": "2025-06-08T09:00:00Z", "domain": "newsite1.com", "is_new_domain": true, "hour_of_day": 9 }
{ "index": { "_index": "user-activity-demo" } }
{ "user.name": "alice", "@timestamp": "2025-06-08T10:00:00Z", "domain": "newsite2.com", "is_new_domain": true, "hour_of_day": 10 }
{ "index": { "_index": "user-activity-demo" } }
{ "user.name": "bob", "@timestamp": "2025-06-08T11:00:00Z", "domain": "facebook.com", "is_new_domain": false, "hour_of_day": 11 }
{ "index": { "_index": "user-activity-demo" } }
{ "user.name": "bob", "@timestamp": "2025-06-08T12:00:00Z", "domain": "newsite3.com", "is_new_domain": true, "hour_of_day": 12 }
{ "index": { "_index": "user-activity-demo" } }
{ "user.name": "charlie", "@timestamp": "2025-06-08T13:00:00Z", "domain": "newsite4.com", "is_new_domain": true, "hour_of_day": 13 }
{ "index": { "_index": "user-activity-demo" } }
{ "user.name": "charlie", "@timestamp": "2025-06-08T14:00:00Z", "domain": "newsite5.com", "is_new_domain": true, "hour_of_day": 14 }
{ "index": { "_index": "user-activity-demo" } }
{ "user.name": "charlie", "@timestamp": "2025-06-08T14:30:00Z", "domain": "newsite6.com", "is_new_domain": true, "hour_of_day": 14 }

Option 1: Simple ratio of newly observed domains per unique hour:

FROM user-activity-demo
| WHERE is_new_domain == true
| STATS 
    new_domains = COUNT(domain),
    unique_hours = COUNT_DISTINCT(hour_of_day)
  BY user.name
| EVAL risk_score = new_domains / unique_hours
| SORT risk_score DESC

Option 2: If you want to emphasize new domains with a bit more weight, you could use subtraction:

FROM user-activity-demo
| WHERE is_new_domain == true
| STATS 
    new_domains = COUNT(domain),
    unique_hours = COUNT_DISTINCT(hour_of_day)
  BY user.name
| EVAL risk_score = new_domains - unique_hours
| SORT risk_score DESC
